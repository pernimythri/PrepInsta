import java.util.*;
class Main{
    int Gcd(int n1,int n2)
    {
        if(n2>n1)
        {
            int temp=n1;
            n2=n1;
            n1=temp; 
        }
        while(n2>0)
        {
            int r=n1%n2;
            n1=n2;
            n2=r;   
        }
        return n1;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.Gcd(n1,n2));
    }
}

             or

import java.util.*;
class Main{
    int Gcd(int n1,int n2)
    {
        int gcd=1;
        for(int i=1;i<=Math.min(n1,n2);i++)
        {
            if(n1%i==0 && n2%i==0)
            gcd=i;
        }
        return gcd;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.Gcd(n1,n2));
    }
}

          or

import java.util.*;
class Main{
    int Gcd(int n1,int n2)
    {
        while(n1!=n2)
        {
            if(n1>n2)
            n1-=n2;
            else
            n2-=n1;
        }
        return n1;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.Gcd(n1,n2));
    }
}

            or

import java.util.*;
class Main{
       int Gcd(int n1, int n2) {
        if (n2 == 0) {
            return n1;
        }
        return Gcd(n2, n1 % n2);
       
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.Gcd(n1,n2));
    }
}
----------------------------------------------------------------------------------------------------


import java.util.*;
class Main{
       int lcm(int n1, int n2) {
           int max=Math.max(n1,n2);
           int sol=1;
           for(int i=max;i<=n1*n2;i++)
           {
               if(i%n1==0 && i%n2==0)
               {
                   sol=i;
               }
           }
           return sol;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.lcm(n1,n2));
    }
}


          or

import java.util.*;
class Main{
       int lcm(int n1, int n2) {
           int gcd=1;
           for(int i=1;i<=Math.min(n1,n2);i++)
           {
               if(n1%i==0 && n2%i==0)
               {
                   gcd=i;
               }
           }
           return (n1*n2)/gcd;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.print(obj.lcm(n1,n2));
    }
}
---------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
       int binToDec(int n)
       {
           int sol=0,i=0;
           while(n>0)
           {
               int rem=n%10;
               sol+=rem*Math.pow(2,i);
               i++;
               n/=10;
           }
          return sol;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.binToDec(n));
    }
}

------------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
       int octToDec(int n)
       {
           int sol=0,i=0;
           while(n>0)
           {
               int rem=n%10;
               sol+=rem*Math.pow(8,i);
               i++;
               n/=10;
           }
          return sol;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.octToDec(n));
    }
}
----------------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
      int hexToDec(String n)
      {
          String hexvalues="0123456789ABCDEF";
          n=n.toUpperCase();
          int val=0;
          for(int i=0;i<n.length();i++)
          {
               char c = n.charAt(i);  
               int d = hexvalues.indexOf(c);  
               val = 16*val + d;
          }
          return val;

    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        String n=sc.next();
        System.out.print(obj.hexToDec(n));
    }
}
         or

import java.util.*;
class Main{
      int hexToDec(String n)
      {
          int sol=Integer.parseInt(n,16);
          return sol;
      }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        String n=sc.next();
        System.out.print(obj.hexToDec(n));
    }
}
-----------------------------------------------------------------------------------------------
import java.util.*;

class Main {
    String decToBin(int n) {
        StringBuilder bin = new StringBuilder();
        while (n > 0) {
            int rem = n % 10; 
            String binaryDigit = binary(rem);
            bin.insert(0, binaryDigit); 
            n /= 10;
        }
        return bin.toString();
    }

    String binary(int val) {
        StringBuilder binaryFormat = new StringBuilder();
        while (val > 0) {
            binaryFormat.append(val % 2); 
            val /= 2;
        }
        binaryFormat.reverse();

        while (binaryFormat.length() < 4) {
            binaryFormat.insert(0, "0");
        }

        return binaryFormat.toString();
    }

    public static void main(String[] args) {
        Main obj = new Main();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println("Binary representation: " + obj.decToBin(n));
    }
}

---------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    
    String decToOctal(int n)
    {
        StringBuilder octalFormat=new StringBuilder();
        while(n>0)
        {
            int quotient=n/8;
            octalFormat.append(n%8);
            n=quotient;
        }
        return octalFormat.reverse().toString();
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.decToOctal(n));
    }
}

--------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    
    String decToHexaDecimal(int n)
    {
        StringBuilder hexFormat=new StringBuilder();
        while(n>0)
        {
            int rem=n%16;
            if(rem>9)
            {
                hexFormat.append(hexvalues(rem));
            }
            else
            {
                hexFormat.append(rem);
            }
            n=n/16;
        }
        return hexFormat.reverse().toString();
    }
    
    char hexvalues(int rem)
    {
        String hexstring="0123456789ABCDEF";
        return hexstring.charAt(rem);
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.decToHexaDecimal(n));
    }
}
-------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    
    String binToOctal(int n)
    {
       int binToDec=binToDecfun(n);
       String decToOctal=decToOctalfun(binToDec);
       return decToOctal;
    }
    
    int binToDecfun(int n)
    {
       int c=0;
       int dec=0;
       while(n>0)
       {
           int digit=n%10;
           dec+=digit*(Math.pow(2,c));
           c+=1;
           n/=10;
       }
       return dec;
    }
    
    String decToOctalfun(int n)
    {
        StringBuilder octalFormat=new StringBuilder();
        while(n>0)
        {
            octalFormat.append(n%8);
            n=n/8;
        }
        return octalFormat.reverse().toString();
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.binToOctal(n));
    }
}

-----------------------------------------------------------------------------------------------
import java.util.*;
class Main{
    String octToBin(int n)
    {
        StringBuilder binaryFormat = new StringBuilder();
        while(n>0)
        {
            int rem=n%10;
            binaryFormat.insert(0,bindigit(rem));
            n/=10;
        }
        return binaryFormat.toString();
    }

    String bindigit(int n)
    {
        StringBuilder eachBinBit = new StringBuilder();
        while(n>0)
        {
            eachBinBit.append(n%2);
            n/=2;
        }
        while(eachBinBit.length() < 3) {
            eachBinBit.append("0");
        }
        return eachBinBit.reverse().toString();
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.octToBin(n));
    }
}
-------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
    String CoordinateQuadrant(int x,int y)
    {
       if(x>0 && y>0)
       return "First Quadrant";
       else if(x<0 && y>0)
       return "Second Quadrant";
       else if(x<0 && y<0)
       return "Third Quadrant";
       else if(x>0 && y<0)
       return "Fourth Quadrant";
       else if(x==0 && y==0)
       return "Origin";
       else if(x==0 && y!=0)
       return "Y-axis";
       else
       return "X-axis";
    }    
    
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int x=sc.nextInt();
        int y=sc.nextInt();
        System.out.print(obj.CoordinateQuadrant(x,y));
    }
}
--------------------------------------------------------------------------------------
import java.util.*;
class Main{
    int Permutation(int n,int r)
    {
        if(r>n)
        return 0;
        int nfact=factorial(n);
        int denfact=factorial(n-r);
        return (nfact/denfact);
    }
    
    int factorial(int n)
    {
        if(n==1 || n==0)
        return 1;
        else
        return n*factorial(n-1);
    }
    
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int r=sc.nextInt();
        System.out.print(obj.Permutation(n,r));
    }
}
---------------------------------------------------------------------------------
/*
 . For the first person, there will be N-1 people to shake hands with
 . For second person, there will be N -1 people available but as he has already shaken hands with the first person, there will be N-1-1 = N-2 shake-hands
 . For third person, there will be N-1-1-1 = N-3, and So On…
 . Therefore the total number of handshake   =   ( N – 1 + N – 2 +….+ 1 + 0 )   =   ( (N-1) * N ) / 2.
*/
import java.util.*;
class Main{
    int maxHandShakes(int n)
    {
        return n*(n-1)/2;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(obj.maxHandShakes(n));
    }
}
-----------------------------------------------------------------------------------
import java.util.*;
class Main{
    String AddTwoFractions(int n1,int n2,int d1,int d2)
    {
        int lcm=lcmfun(d1,d2);
        int muln1=lcm/d1;
        int muln2=lcm/d2;
        n1=n1*muln1;
        n2=n2*muln2;
        int num=n1+n2;
        int result=hcf(num,lcm);
        num/=result;
        lcm/=result;
        return "("+num+"/"+lcm+")";
    }
    
    int lcmfun(int d1,int d2)
    {
        int val=1;
        int max=Math.max(d1,d2);
        for(int i=max;i<=d1*d2;i++)
        {
            if(i%d1==0 && i%d2==0)
            val=i;
        }
        return val;
    }
   
   int hcf(int n1,int n2)
   {
       int val=1;
       for(int i=1;i<=Math.min(n1,n2);i++)
       {
           if(n1%i==0 && n2%i==0)
           val=i;
       }
       return val;
   }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        int d1=sc.nextInt();
        int d2=sc.nextInt();
        System.out.print(obj.AddTwoFractions(n1,n2,d1,d2));
    }
}
-----------------------------------------------------------------------------
