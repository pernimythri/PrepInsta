import java.util.*;
class Main{
    String PosNeg(int n)
    {
        if(n==0)
        return "Zero";
        else if(n>0)
        return "Pos";
        else
        return  "Neg";
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.println(obj.PosNeg(n));
    }
}
------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String EvenOdd(int n)
    {
       return n%2==0 ? "Even" : "Odd";          or        return (n&1)==0 ? "Even" : "Odd" ;
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.println(obj.EvenOdd(n));
    }
}

--------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    int SumofNaturals(int n)
    {
        int sum=0;                                       or          return n*(n+1)/2;
        for(int i=1;i<=n;i++)
        sum+=i;
        return sum;
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.println(obj.SumofNaturals(n));
    }
}

---------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    int SumofNaturalsinRange(int start,int end)
    {
        int sum=0;                                           or          return (end*(end+1)/2)-(start*(start+1)/2)+start;
        for(int i=start;i<=end;i++)
        sum+=i;
        return sum;
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int start=sc.nextInt();
        int end=sc.nextInt();
        System.out.println(obj.SumofNaturalsinRange(start,end));
    }
}

-----------------------------------------------------------------------------------------------------------------------------


import java.util.*;
class Main{
    int greaterOfTwoNum(int n1,int n2)
    {
          if(n1>n2)
          return n1;                      or        return n1>n2 ? n1:n2;               or       return Math.max(n1, n2);
          else
          return n2;
     }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        System.out.println(obj.greaterOfTwoNum(n1,n2));
    }
------------------------------------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;

class Main {
    int largestOfThree(int a, int b, int c) {
        if (a >= b && a >= c) {
            return a;
        } else if (b  >= c) {                            or                  return Math.max(a, Math.max(b, c));    or             return (a >= b && a >= c) ? a : (b >= c ? b : c);
            return b;   
        } else {
            return c;
        }
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        Main obj = new Main();

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int largest = obj.largestOfThree(a, b, c);
        System.out.println(largest);
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String leapyear(int n)
    {
        if(n%400==0 || (n%4==0 && n%100!=0))
        return "Leapyear";
        else
        return "Not Leapyear";
        
    }
    
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.println(obj.leapyear(n));
    }
}

-------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String prime(int n)
    {
        int count=0;
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                count+=1;
                if(n/i!=i)
                count+=1;
        }
        }
        if(count==2)
        return "Prime";
        else
        return "Not Prime";
        
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.println(obj.prime(n));
    }
}

-----------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
    boolean prime(int n)
    {
         int count=0;
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                count+=1;
                if(n/i!=i)
                count+=1;
        }
        }
        if(count==2)
        return true;
        else 
        return false;
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int start=sc.nextInt();
        int end=sc.nextInt();
        for(int i=start;i<=end;i++)
        {
          if(obj.prime(i))
          System.out.print(i+ " ");
        }

    }
}
--------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    int sumOfDigits(int n)
    {
         int sum=0;
         while(n>0)
         {
             sum+=n%10;
             n=n/10;
         }
         return sum;
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.print(obj.sumOfDigits(n));

    }
}
-----------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String reverseNum(int n)
    {
         String rev="";
         while(n>0)
         {
             rev+=n%10;
             n=n/10;
         }
         return rev;
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.print(obj.reverseNum(n));

    }
}

                     or


import java.util.*;
class Main{
    int reverse(int n)
    {
        int rev=0;
         while(n>0)
         {
             int rem=n%10;
             rev=rev*10+rem;
             n/=10;
         }
         return rev;
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.print(obj.reverse(n));

    }
}

----------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String Palindrome(int n)
    {
         int rev=0,temp=n;
         while(n>0)
         {
             int rem=n%10;
             rev=rev*10+rem;
             n/=10;
         }
         if(rev==temp)
         return "Palindrome";
         else
         return "Not Palindrome";
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.print(obj.Palindrome(n));

    }
}
------------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String Palindrome(String str)
    {
        for(int i=0;i<str.length();i++)
        {
            if(str.charAt(i)!=str.charAt(str.length()-i-1))
            return "Not Palindrome";
        }
        return "Palindrome";
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        String str=sc.nextLine();
        System.out.print(obj.Palindrome(str));

    }
}
-----------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    String Armstrong(int n)
    {
      int val=0,temp=n;
      while(n>0)
      {
          int rem=n%10;
          val+=Math.pow(rem,count(temp));
          n/=10;
      }
       if(val==temp)
      return "Armstrong";
      else
      return "Not Armstrong";
    }
    
      int count(int n)
      {
          int c=0;
          while(n>0)
          {
              c+=1;
              n/=10;
          }
          return c;
      }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        System.out.print(obj.Armstrong(n));

    }
}
-----------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    void fibonacci(int n)
    {
        int n1=0,n2=1;
        System.out.print(n1 +" "+n2 +" ");
        while((n-2)>0)
        {
            int n3=n1+n2;
            System.out.print(n3+ " ");
            n1=n2;
            n2=n3;
            n--;
        }
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        obj.fibonacci(n);
    }
}

--------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    void factorial(int n)
    {
        int fact=1;
        while(n>0)
        {
        fact*=n;
        n--;
        }
        System.out.print(fact);
    }
    
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        obj.factorial(n);

    }
}

-----------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    int power(int n,int p)
    {
       int val=1;
       while(p>0)
       {
           val*=n;                                     or               return (int)Math.pow(n,p);
           p--;
       }
       return val;
    }
    
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        int p=sc.nextInt();
        System.out.print(obj.power(n,p));

    }
}

-------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    void factor(int n)
    {
        List<Integer> factors = new ArrayList<>();
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
            factors.add(i);
            if(n/i!=i)
            factors.add(n/i);
        }
        }
        Collections.sort(factors);
        for(int i=0;i<factors.size();i++)
        System.out.print(factors.get(i)+" ");
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        obj.factor(n);
    }
}
---------------------------------------------------------------------------------------------------------------------

import java.util.*;
class Main{
    void primefactors(int n)
    {
        List<Integer>factors=new ArrayList<>();
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
            if(prime(i))
            factors.add(i);
            if(n/i!=i)
            {
            if(prime(n/i))
            factors.add(n/i);
        }}
        }
        Collections.sort(factors);
        for(int i=0;i<factors.size();i++)
        
        {
           System.out.print(factors.get(i)+" ");
         }
    }
    boolean prime(int n)
    {
        int count=0;
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
            count++;
            if(n/i!=i)
            count++;
            }
        }
        if(count==2)
        return true;
        else
        return false;
    }
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        obj.primefactors(n);
    }
}

